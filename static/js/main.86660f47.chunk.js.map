{"version":3,"sources":["Redux/contacts/contacts-actions.js","ContactList/ContactsList.js","Filter/Filter.js","Forms/Form.js","App.js","Redux/contacts/contacts-reducer.js","Redux/store.js","index.js"],"names":["addContact","createAction","data","payload","id","uuidv4","name","number","deleteContact","updateFilter","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","connect","contacts","items","dispatch","onDeleteContact","actions","className","map","type","onClick","state","value","onChange","e","target","Form","handleChange","event","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","some","item","alert","resetForm","this","pattern","title","required","Component","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contactsReducer","moduleDefaultForExport","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.86660f47.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = createAction('contacts/Add', data => ({\n  payload: {\n    id: uuidv4(),\n    name: data.name,\n    number: data.number,\n  },\n}));\n\nexport const deleteContact = createAction('contacts/Delete');\n\nexport const updateFilter = createAction('contacts/UpdateFilter');\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../Redux/contacts/contacts-actions';\nimport './ContactList.css';\n\nfunction ContactsList({ contacts, onDeleteContact }) {\n  return (\n    <ul className=\"contactsList\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className=\"item\">\n          <span className=\"itemText\">\n            <span className=\"itemName\">{name}:</span>\n            <span className=\"itemNum\">{number}</span>\n          </span>\n\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n            className=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../Redux/contacts/contacts-actions';\nimport './Filter.css';\n\nconst Filter = ({ value, onChange }) => (\n  <div className=\"filter\">\n    <label>\n      <span className=\"filterText\">Filter</span>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(actions.updateFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../Redux/contacts/contacts-actions';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { items, onSubmit } = this.props;\n    const { name } = this.state;\n\n    if (items.some(item => item.name === name)) {\n      alert(`${name} already exist in contact list`);\n      return;\n    }\n\n    onSubmit(this.state);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        <label>\n          <h2>Name</h2>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <h2>Number</h2>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className=\"button\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: value => dispatch(actions.addContact(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport ContactsList from './ContactList/ContactsList';\nimport Filter from './Filter/Filter';\nimport Form from './Forms/Form';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"formsContainer\">\n        <Form />\n      </div>\n\n      <div className=\"contactsContainer\">\n        <div className=\"contacts\">\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactsList />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\n\nconst itemsInitialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = createReducer(itemsInitialState, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(item => item.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.updateFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'Contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\n// чтоб убрать ошибку из консоли\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  //devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconst moduleDefaultForExport = { store, persistor };\n\nexport default moduleDefaultForExport;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}